doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Modules Modules Modules

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .hello {
      background-image: url('images/hello-tharr.gif')
    }

  body

    article

      section
        h2 Modules Modules Modules:
        h4 With your host
        h4
          a(href='https://twitter.com/MylesBorins') @MylesBorins
        p  Node Interactive 2017
        
      section(data-bespoke-backdrop='hello')
        h1 Bonjour!
        
      section
        h1 My Name is Myles
        img.headroom(src='images/me.jpg' alt='itsa me!' width='200px' height='200px')
      
      section
        h3 I am gainfully employed by Google as a Developer Advocate
        h4 Focusing on the Node.js ecosystem and GCP
        
        img(src='images/gcp.png' alt='Google Cloud Platform' style='background-color:white;')
        
        h5.headroom The opinions expressed in this talk are solely my own
      
      section
        h1 Shout out to Brad Farias

      section
        h1 You can use ESM in Node.js Today!

      section
        h1 A quick history lesson

      section
        h1 ES4 introduced the concept of packages

      section
        h2 Similar to c++ namespaces
        h3 Intent was to create something like the Java Jar System

      section
        h1 Ripped out of standards track and never seen again

      section
        h2 CommonJS is intoduced with members of TC39 working on it.
        h3 Not on standards tracks
        h4 Intended for Serverside JS

      section
        h1 Node.js Implemented a variant of CommmonJS

      section
        h1 AMD Showed up on the scene
      
      section
        h2 Only "spec'd" by requireJS
        h3 More of a convention

      section
        h1 Why not UMD?

      section
        h1 ESModules land in ecma262 in 2015

      section
        h1 The Loader is not specified

      section
        h1 The Loader is implemented by embedder

      section
        h2 Generic term for workflow
        ul
          li.hide
          li Fetch
          li Transform
          li Evaluation Hook

      section
        h1 DANGER

      section
        h3 ESModules
        h2 Async Load ~ Sync Execution

      section
        h3 CommonJS
        h2 Sync Load + Inline Execution

      section
        h1 CommonJS + ESModules execute differently

      section
        h1 They have different goals

      secton
        h3 In the ecmascript spec a “Goal” is a pairing
        h2 of a top-level grammar and top-level execution mode

      section
        h2 4 Types of Goals
        ul
          li.hide 
          li Script Strict
          li Script Sloppy
          li ESmoules
          li Node.js Goal

      section
        h1 What is a top level grammar?

      section
        h2 Strict Mode vs Sloppy Mode
        h3 Denoted with Pragma

      section
        h2 Module goal has extra grammar changes
        ul
          li.hide
          li No HTML Comments
          li Await is a reserved keyword
          li Divergence may increase over time

      section 
        h1 DANGER

      section
        h2 ESModules do not have in source way of determining goal

      section
        h2 Potential Future Goals
        ul
          li.hide
          li BinaryAST
          li WASM
          li WebPackage
          li HTML Modules

      section
        h2 Thank You
        img.headroom(src='images/best-gif-evar.gif' alt='a surfing puppy' width='20%')
        h4 @MylesBorins

    script(src='build/build.js')
